[ch07] 훅[HOOK] - p214
- 특정시점에 실행하도록 하는 함수를 지칭하는 말입니다.
- 함수의 이름이 use로 시작됩니다.
  (예) useState(), useEffect()
- 개발자가 만들수도 있는데 이름은 use로 시작되도록 만들어야 합니다.

**** useState
- 형식: const [변수이름, setter함수이름] = useState(초기값);
- useState로 정의한 변수가 값이 변경되면 렌더링이 다시됩니다.
- setter함수란? 변수값을 변경시키는 함수
- useState로 정의한 변수는 값을 직접변경시키는 것이 아니라
  setter함수를 이용해서 변경합니다.

**** useEffect
- 형식: useEffect(이펙펙트함수, 의존성 배열);
- 배열안에 있는 변수중 값이 하나라도 변경되면 이펙트함수가 실행됩니다.
- 의존성배열이 없으면 렌더링이 일어날때마다 이펙드함수가 실행됩니다.
  예) useEffect(이펙트함수);

- 사용예
  1. useEffect(이펙트함수); - 랜더링이 일어날 때마다 이펙트함수 실행
  2. useEffect(이펙트함수, []); - 컴포넌트가 처음생성될때, 사라질때만 이펙트함수가 실행됩니다. -> 한번만 실행된다고 생각하시면 됩니다.
  3. useEffect(이펙트함수, [변수명1,변수명2]); - 변수명1의 값 또는 변수명2의 값이 변경될 때 이펙트 함수가 실행됩니다.

useState()는 변수값이 변경될때 재랜더링을 하도록 하는 것이고,
useEffect()는 값이 변경될때 실행하는 함수를 정의하는 것입니다.

useEffect의 전체 모습 살펴보면
useEffect(()=>{
  // 컴포넌트가 마운트 된 이후,
  // 의존성 배열에 있는 변수들 중 하나라도 값이 변경되었을 때 실행됨
  // 의존성 배열이 생략되면 랜더링시마다 실행됩니다.
  // 의존성 배열에 [](빈배열)을 설정하면 마운트(생성), 언마운트(없어질때) 실행됩니다.
  ........(실행코드)
  return (()=>{
    // 언마운트될때 한번만 실행됩니다.
  });
}, [의존성변수1, 의존성변수2, ...]);
===> useEffect에서 정의한 이펙트 함수는 랜더링이 일어난 이후 실행이 됩니다.

**** useMemo
const memoizedValue = useMemo(()=>{
          // 의존성변수를 가지고 연산량이 높은 작업을 이곳에서 실행하고 결과값만 리턴한다.
          실행문;
          return 결과값;
      }, [의존성변수1, 의존성변수2, ...]);
**** useCallback
const memoizedCallback = useCallback(()=>{
          함수(의존성변수1, ...);
      }, [의존성변수1, 의존성변수2, ...]);


**** 훅을 사용하고자 할때 알아야 할것
1. function 컴포넌트에서만 사용할 수 있습니다.
2. 훅은 컴포넌트 내부에서 최상위 레벨에서만 호출해야 합니다.
예)
function MyComponent(props) {
  const [name, setName] = useState('lee'); -> O

  if (name != '') {
    useEffect(()=>{     ----> X
      ...
    });
  }
  ....
}
---> 조건문 또는 반복문에 hook을 사용할 수 없습니다.
3. 같은 순서대로 호출됩니다.
