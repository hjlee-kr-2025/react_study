- http:// 기본포트번호 => 80
- https:// 기본포트번호 => 443

http://주소:포트번호

React - 자바스크립트 라이브러리
리액트로 구현할 수 있는 모든것은 자바스크립트로 구현할 수 있습니다.
JSX 문법에서는 { } 안에 자바스크립트 코드를 작성합니다.
root -> 가상DOM 최상위요소를 만듭니다.
ReactDOM.createRoot(document.getElementById('root')) 

* styled-components
- 스타일을 가진 컴포넌트를 만들때 사용하는 라이브러리
- 만들어진 컴포넌트의 이름 첫글자는 대문자
- 사용자 컴포넌트와 동일하게 사용합니다.
- CSS문법을 그대로 사용할 수 있습니다.
- 클래스 선택자라고 생각하시면 내용을 이해하시기 쉬울것으로 생각됩니다.

* create-react-app
- React@19(2024년 12월 5일배포) 에서는 \>yarn create react-app 프로젝트이름
  : 이유는 npx create-react-app 을 사용했을때 의존성문제가 발생

* 리액트 관련설치(node.js를 이용한다.)
yarn, npm : 라이브러리 설치
의존성문제가 생기면 라이브러리 설치시 버전를 표기하여 설치
라이브러리이름@버전

* 값을 전달할때 props를 사용
* 컨텍스트 - 중간단계에 값을 사용안하고 하위단계에 사용될때

* 리스트를 만들때 key속성(유일한값)을 주어야합니다.

* Hook(훅)
- use로 시작합니다.
- 사용시 순서가 변경되면 안됩니다.
- 컴포넌트의 최상단에서 사용합니다.
- 대표적인hook ; useState
  예) const [count, setCount] = useState(0);
  => 값이 변경되었을때 재랜더링을 합니다.
  입력창의 값이 변경되는 부분을 useState로 선언하고 구현하였습니다.

** 이벤트
- 속성이름 : onClick과 같이 on 다음에오는 글자를 대문자로 작성합니다.
 예) onClick, onChange, onSubmit, ...

** 자바스크립트의 변수이름에 -를 사용할 수 없습니다.
- '-'를 사용하는 속성이 있으면 -를빼고 다음글자를 대문자로 변경하여 사용하였습니다.
  예) backgroundColor, fontSize, fontWidth, ...

** JSON 자료형
{
  key1: value1, key2: value2, ...
}

** 배열은 [값1, 값2, 값3, ...] 로 묶여 있습니다.


** 사용자 컴포넌트
- 첫글자가 대문자
예) 
선언-
function UserCom(props) {
  return (
    <div>
      내용
    </div>
  );
}

사용 - 태그사용하는 것처럼
  <UserCom></UserCom>

'<' 다음에 소문자가 오면 html기본 태그라고 react는 생각합니다.
